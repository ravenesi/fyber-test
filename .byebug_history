exit
reload!
entry.read
entry
entry.rewind.read.force_encoding("utf-8")
entry.read.force_encoding("utf-8")
entry.read.encode("iso-8859-1").force_encoding("utf-8")
entry.read
s
n
cl.fetch
exit
cl.fetch
exit
cl.fetch
exit
cl
cl.fetch
cl
c
cl
c
c.fetch
c = CranR::CrawlerDescription.new(source_url: package_source_url)
package_source_url
continue
next
exit
Mail::AddressList.new(@informations.first.fetch('Maintainer')).addresses.first.address
Mail::AddressList.new(@informations.first.fetch('Maintainer')).addresses.first.full_name
Mail::AddressList.new(@informations.first.fetch('Maintainer')).addresses.first.name
Mail::AddressList.new(@informations.first.fetch('Maintainer')).addresses.first.full_name
Mail::AddressList.new(@informations.first.fetch('Maintainer')).addresses.first.address
Mail::AddressList.new(@informations.first.fetch('Maintainer')).addresses.first
Mail::AddressList.new(@informations.first.fetch('Maintainer')).addresses.each do 
Mail::AddressList.new(@informations.first.fetch('Maintainer')).addresses
Mail::AddressList.new(@informations.first.fetch('Maintainer'))
@informations.first.fetch('Maintainer')
@informations.first.fetch(:Maintainer)
@informations.first
@informations
continue
exit
@package
#package
Package
 @package = Dcf.parse(package).last
package
@package
exit
@package
package
exit
@worker.perform_later
@worker
@woker
next
buffer
next
buffer
Dcf.parse buffer.join
next
Dcf.parse buffer.join
continue
exit
@data.readlines(6)
@data.readlines
continue
@event.valid?
@event
@vent.valid?
continue
end_date
start_date
start_dae
